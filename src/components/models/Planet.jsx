/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useAtom } from "jotai";
import { isPlanetVisibleAtom } from "@/app/jotaiAtoms";

const Planet = React.memo(function PlanetModel(props) {
  const modelRef = useRef();
  const [isPlanetVisible] = useAtom(isPlanetVisibleAtom);

  // Load the planet model
  const { scene } = useGLTF("/models/planet.glb");

  // Float animation
  useFrame((state) => {
    if (modelRef.current) {
      modelRef.current.rotation.y += 0.003;
      modelRef.current.position.y =
        0 + Math.sin(state.clock.elapsedTime) * 0.15;
    }
  });

  if (!isPlanetVisible) {
    return null;
  }

  return (
    <primitive
      ref={modelRef}
      object={scene}
      {...props}
      scale={[0.6, 0.6, 0.6]}
      position={[0, 0, 0]}
      rotation={[0, 0.5, 0]}
      dispose={null}
    />
  );
});

export default Planet;

// Preload model for performance
useGLTF.preload("/models/planet.glb");
